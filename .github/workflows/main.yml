name: Black Widow Users CI/CD
on:
  - push
  - pull_request

env:
  IMAGE_TAG: ${{ secrets.CONTAINER_REGISTRY }}:${{ github.sha }}


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Dockerhub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and tag image
        run: docker build -t ${{ env.IMAGE_TAG }} .

      - name: Push image to container registry
        run: docker push ${{ env.IMAGE_TAG }}

      - name: Check code formatting
        run: docker run --rm -t ${{ env.IMAGE_TAG }} bash -c "isort . --check && black . --check"

      - name: Static code analysis
        run: docker run --rm -t ${{ env.IMAGE_TAG }} bash -c "prospector ."

      - name: Run unit tests
        run: docker run --rm -t ${{ env.IMAGE_TAG }} bash -c "./scripts/unit-test.sh"

      - name: Run integration tests
        run: docker run --rm -t ${{ env.IMAGE_TAG }} bash -c "./scripts/integration-test.sh"

      - name: Prepare chalice config
        run: >
          python scripts/prepare_config.py --config_file .chalice/config.template.json \
          --output_file .chalice/config.json --iam_role_arn {{ secrets.LAMBDA_ROLE_ARN}} \ 
          --env_variables=secret_key={{ secrets.SECRET_KEY }},aws_access_key={{ secrets.AWS_ACCESS_KEY }},aws_secret_key={{ secrets.AWS_SECRET_KEY }},table_name={{ secrets.DYNAMODB_TABLE_NAME }}

      - name: Export requirements
        run: poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Prepare aws credentials
        run: mkdir -p ~/.aws && printf "[default]\naws_access_key_id={{ secrets.AWS_ACCESS_KEY }\naws_secret_access_key={{ secrets.AWS_SECRET_KEY }}\nregion=eu-central-1"

      - name: Deploy app
        run: docker run -v requirements.txt:/app/requirements.txt -v ~/.aws:~/.aws -v .chalice/config.json:/app/.chalice/config.json --rm it ${{ env.IMAGE_TAG }} bash -c "chalice deploy"